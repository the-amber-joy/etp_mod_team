{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dialog/dialog.component.css","webpack:///./src/app/dialog/dialog.component.html","webpack:///./src/app/dialog/dialog.component.ts","webpack:///./src/app/offender/offender.component.css","webpack:///./src/app/offender/offender.component.html","webpack:///./src/app/offender/offender.component.ts","webpack:///./src/app/offender/offender.service.ts","webpack:///./src/app/shared/note.model.ts","webpack:///./src/app/shared/offender.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"mat-input-element {\\r\\n    color: warn;\\r\\n}\\r\\n\\r\\n.save-button {\\r\\n    float: left;\\r\\n    color: accent\\r\\n}\\r\\n\\r\\n.cancel-button {\\r\\n    float: right;\\r\\n    color: warn\\r\\n}\"","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    {{title}}\\r\\n  </h1>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n  title = 'ETP Mod Team';\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatButtonModule, MatCheckboxModule, MatFormFieldModule,\r\n  MatFormFieldControl, MatInputModule, MatSlideToggleModule,\r\n  MatDividerModule, MatSelectModule, MatSelectChange, MatExpansionModule,\r\n  MatListModule, MatDialogModule, MatIconModule, MatTooltipModule\r\n} from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { OffenderComponent } from \"../app/offender/offender.component\";\r\nimport { OffenderService } from './offender/offender.service';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    OffenderComponent,\r\n    DialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    BrowserAnimationsModule,\r\n    MatSlideToggleModule,\r\n    MatDividerModule,\r\n    MatSelectModule,\r\n    MatExpansionModule,\r\n    MatListModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    MatTooltipModule\r\n  ],\r\n  providers: [\r\n    HttpClientModule,\r\n    OffenderService\r\n  ],\r\n  bootstrap: [\r\n    AppComponent,\r\n    OffenderComponent,\r\n  ],\r\n  entryComponents: [DialogComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".cdk-global-overlay-wrapper {\\r\\n  height: auto;\\r\\n}\\r\\n\\r\\nmat-dialog-content {\\r\\n  min-height: 300px;\\r\\n}\"","module.exports = \"<form (ngSubmit)=\\\"addNew()\\\">\\r\\n<h2 mat-dialog-title>Adding {{data.name}} to the Shit List</h2>\\r\\n<mat-dialog-content>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput\\r\\n      [formControl]=\\\"nameCtrl\\\"\\r\\n      required\\r\\n      type=\\\"text\\\"\\r\\n      name=\\\"name\\\"\\r\\n      autocomplete=\\\"off\\\"\\r\\n      [(ngModel)]=\\\"data.name\\\"\\r\\n      placeholder=\\\"Name\\\">\\r\\n      <mat-error *ngIf=\\\"nameCtrl.invalid\\\">{{getNameError()}}</mat-error>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <mat-form-field>\\r\\n      <mat-select\\r\\n      [formControl]=\\\"pointsCtrl\\\"\\r\\n      required name=\\\"points\\\"\\r\\n      placeholder=\\\"Initial Points\\\"\\r\\n      [(ngModel)]=\\\"data.points\\\"\\r\\n      name=\\\"newOffenderPoints\\\">\\r\\n        <mat-option *ngFor=\\\"let num of points\\\" [value]=\\\"num.value\\\">\\r\\n          {{num.display}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n      <mat-error *ngIf=\\\"pointsCtrl.invalid\\\">{{getScoreError()}}</mat-error>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <mat-form-field>\\r\\n      <input\\r\\n      [formControl]=\\\"noteCtrl\\\"\\r\\n      matInput\\r\\n      required\\r\\n      type=\\\"text\\\"\\r\\n      name=\\\"newNote\\\"\\r\\n      autocomplete=\\\"off\\\"\\r\\n      [(ngModel)]=\\\"newNote\\\"\\r\\n      placeholder=\\\"Notes\\\">\\r\\n      <mat-error *ngIf=\\\"noteCtrl.invalid\\\">{{getNotesError()}}</mat-error>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n\\r\\n    <mat-dialog-actions>\\r\\n      <button type=\\\"button\\\" color=\\\"warn\\\" mat-dialog-close (click)=\\\"cancelAdd()\\\">Cancel</button>\\r\\n      <button type=\\\"submit\\\" mat-button color=\\\"primary\\\" [disabled]=\\\"nameCtrl.invalid || pointsCtrl.invalid || noteCtrl.invalid\\\">Add</button>\\r\\n    </mat-dialog-actions>\\r\\n  </div>\\r\\n</mat-dialog-content>\\r\\n</form>\"","import { Component, OnInit, Input, Output, EventEmitter, Inject, ViewEncapsulation, NgModule } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatSelectChange } from '@angular/material';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { Offender } from '../shared/offender.model'\r\nimport { Admin } from '../shared/admin.model';\r\nimport { Note } from '../shared/note.model';\r\n\r\n@Component({\r\n  selector: 'dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DialogComponent implements OnInit {\r\n  constructor(public dialogRef: MatDialogRef<DialogComponent>, @Inject(MAT_DIALOG_DATA) public data: {name: string, nickName: string, points: number, note: string}) {  }\r\n\r\n  ngOnInit() {\r\n    this.createPoints()\r\n    this.newOffender = new Offender();\r\n  }\r\n\r\n  @Output() selectionChange: EventEmitter<MatSelectChange>\r\n  name = this.data.name;\r\n  newOffender: Offender;\r\n  newNote: string;\r\n  nameCtrl = new FormControl(this.data.name, [Validators.required]);\r\n  pointsCtrl = new FormControl(0, [Validators.required]);\r\n  noteCtrl = new FormControl('', [Validators.required]);\r\n  points = new Array();\r\n\r\n  createPoints() {\r\n    for (let i = 0; i < 10; i++) {\r\n      let point = { \"value\": i + 1, \"display\": i + 1 };\r\n      this.points.push(point);\r\n    }\r\n  }\r\n\r\n  selectPoints(pointValue) {\r\n    this.data.points = pointValue;\r\n  }\r\n\r\n  getNameError() {\r\n    if (this.nameCtrl.hasError('required')) {\r\n      return 'Name is required';\r\n    }\r\n  }\r\n\r\n  getScoreError() {\r\n    if (this.pointsCtrl.hasError('required')) {\r\n      return 'Please select a value 1-10';\r\n    }\r\n  }\r\n\r\n  getNotesError() {\r\n    if (this.noteCtrl.hasError('required')) {\r\n      return 'Please add a note about why you are shit-listing ' + this.data.name;\r\n    }\r\n  }\r\n\r\n  addNew() {\r\n    if (this.nameCtrl.valid && this.noteCtrl.valid && this.pointsCtrl.valid) {\r\n      this.newOffender.notes = [];\r\n\r\n      let newNote = new Note(this.newNote, { firstName: \"Fake\", lastName: \"Tester\", nickName: \"Admin\" });\r\n      newNote.isNew = false;\r\n      this.newOffender.notes.push(newNote);\r\n      this.newOffender.name = this.data.name;\r\n      this.newOffender.points = this.data.points;\r\n      this.newOffender.originalPoints = this.data.points;\r\n      this.newOffender.isBanned = false;\r\n      this.newOffender.originalStatus = this.newOffender.isBanned;\r\n      this.newOffender.nickName = this.data.nickName ? this.data.nickName : null;\r\n      this.dialogRef.close(this.newOffender);\r\n    }\r\n  }\r\n\r\n  cancelAdd(): void {\r\n    this.data = null;\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  createDropdown() {\r\n    for (let i = 0; i > 10; i++) {\r\n      let point = {\"value\": i+1, \"display\": i+1}\r\n      this.points.push(point);\r\n    }\r\n    return this.points;\r\n  }\r\n\r\n}","module.exports = \"mat-expansion-panel-header {\\r\\n    font-size: 20px;\\r\\n}\\r\\n\\r\\nmat-icon {\\r\\n    color: accent;\\r\\n}\\r\\n\\r\\n.dates {\\r\\n    margin-bottom: 25px;\\r\\n}\\r\\n\\r\\n.date-added{\\r\\n    font-size: 16px;\\r\\n}\\r\\n\\r\\n.note-btn:after {\\r\\n    font-family: 'FontAwesome';\\r\\n    content: \\\"\\\\f055\\\";\\r\\n    font-size: 3em;\\r\\n}\\r\\n\\r\\n.note-btn.mat-icon-button {\\r\\n     color: #28a745;\\r\\n}\\r\\n\\r\\n.note-btn:disabled {\\r\\n    color: rgba(0,0,0,.26);\\r\\n}\\r\\n\\r\\n.banned {\\r\\n    color: #f44336;\\r\\n}\\r\\n\\r\\n.new-offender, .offenders {\\r\\n    margin: 20px auto 10px auto;\\r\\n}\\r\\n\\r\\nul {\\r\\n  list-style: none;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\nli {\\r\\n  padding-left: 1.3em;\\r\\n}\\r\\n\\r\\nli:before {\\r\\n  font-family: \\\"FontAwesome\\\";\\r\\n  content: \\\"\\\\f075\\\";\\r\\n  display: inline-block;\\r\\n  margin-left: -1.3em;\\r\\n  width: 1.3em;\\r\\n}\\r\\n\\r\\n.changed-item:before {\\r\\n  font-family: \\\"FontAwesome\\\";\\r\\n  content: \\\"\\\\f069\\\";\\r\\n  color: #f44336;\\r\\n  margin-left: -1.3em;\\r\\n  width: 1.3em;\\r\\n}\"","module.exports = \"<form (ngSubmit)=\\\"openDialog(addedName)\\\">\\r\\n    <mat-form-field>\\r\\n        <button type=\\\"button\\\" matPrefix mat-icon-button (click)=\\\"addedName=''\\\">\\r\\n            <mat-icon *ngIf=\\\"addedName != ''\\\" class=\\\"cancelX\\\">x</mat-icon>\\r\\n        </button>\\r\\n        <input name=\\\"addedName\\\" autocomplete=\\\"off\\\" matInput [(ngModel)]=\\\"addedName\\\" placeholder=\\\"Who is it now?\\\">\\r\\n    </mat-form-field>\\r\\n    <button type=\\\"submit\\\" color=\\\"accent\\\" mat-raised-button [disabled]=\\\"addedName == ''\\\">Add</button>\\r\\n</form>\\r\\n\\r\\n<div class=\\\"offenders\\\">\\r\\n<mat-accordion>\\r\\n<mat-expansion-panel *ngFor=\\\"let offender of offenders\\\">\\r\\n\\r\\n    <mat-expansion-panel-header [class.changed-item]=\\\"offender.changesMade == true\\\">\\r\\n        <mat-panel-title>\\r\\n            {{offender.name}}\\r\\n        </mat-panel-title>\\r\\n        <mat-panel-description>\\r\\n            <span *ngIf=\\\"!offender.isBanned && offender.points < 10\\\">{{offender.points}} Point<span *ngIf=\\\"offender.points > 1\\\">s</span></span>\\r\\n            <span class=\\\"banned\\\" *ngIf=\\\"!offender.isBanned && offender.points == 10\\\">{{offender.points}} Points</span>\\r\\n            <span class=\\\"banned\\\" *ngIf=\\\"offender.isBanned\\\">Banned</span>\\r\\n        </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n<div class=\\\"dates\\\">\\r\\n    <div class=\\\"date-added\\\">First Offense: {{offender.created | date}}</div>\\r\\n    <div>\\r\\n        Last Updated:\\r\\n            {{offender.updated | date}}\\r\\n            by Admin{{Admin}}\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    <div class=\\\"form-group points\\\" [class.changed-item]=\\\"offender.originalPoints != offender.points\\\">\\r\\n        <mat-form-field>\\r\\n            <mat-select\\r\\n            placeholder=\\\"Points\\\"\\r\\n            [(value)]=\\\"offender.points\\\"\\r\\n            [disabled]=\\\"offender.isBanned\\\"\\r\\n            [(ngModel)]=\\\"offender.points\\\"\\r\\n            (selectionChange)=\\\"pointsChanged($event, offender)\\\"\\r\\n            name=\\\"points\\\">\\r\\n                <mat-option [value]=1>1</mat-option>\\r\\n                <mat-option [value]=2>2</mat-option>\\r\\n                <mat-option [value]=3>3</mat-option>\\r\\n                <mat-option [value]=4>4</mat-option>\\r\\n                <mat-option [value]=5>5</mat-option>\\r\\n                <mat-option [value]=6>6</mat-option>\\r\\n                <mat-option [value]=7>7</mat-option>\\r\\n                <mat-option [value]=8>8</mat-option>\\r\\n                <mat-option [value]=9>9</mat-option>\\r\\n                <mat-option [value]=10>10</mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\" [class.changed-item]=\\\"offender.originalStatus != offender.isBanned\\\">\\r\\n        <mat-slide-toggle\\r\\n        color=\\\"warn\\\"\\r\\n        [(ngModel)]=\\\"offender.isBanned\\\"\\r\\n        [checked]=\\\"offender.isBanned\\\"\\r\\n        (change)=\\\"banStatusChanged($event, offender)\\\"\\r\\n        name=\\\"isBanned\\\">\\r\\n            <span *ngIf=\\\"!offender.isBanned\\\">Banned?</span>\\r\\n            <span *ngIf=\\\"offender.isBanned\\\">Banned on {{offender.updated | date}} by Admin{{Admin}}</span>\\r\\n        </mat-slide-toggle>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <form (ngSubmit)=\\\"addNewNote(offender)\\\">\\r\\n            <mat-form-field>\\r\\n                <button [disabled]=\\\"newNote == ''\\\" mat-button matPrefix mat-icon-button (click)=\\\"newNote=''\\\">\\r\\n                    <mat-icon *ngIf=\\\"newNote != ''\\\" class=\\\"cancelX\\\">x</mat-icon>\\r\\n                </button>\\r\\n                <input matInput name=\\\"newNote\\\" type=\\\"text\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"newNote\\\" placeholder=\\\"Add comments\\\" />\\r\\n            </mat-form-field>\\r\\n            <button class=\\\"note-btn\\\" type=\\\"submit\\\" [disabled]=\\\"newNote == ''\\\" mat-button matSuffix label=\\\"Add comment\\\" mat-icon-button></button>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <h3 class=\\\"mat-h3\\\">History</h3>\\r\\n        <ul *ngFor=\\\"let note of offender.notes\\\">\\r\\n            <li [class.changed-item]=\\\"note.isNew\\\">{{note.note}} <em>({{note.created | date}} by {{note.addedBy.nickName}})</em></li>\\r\\n        </ul>\\r\\n    </div>\\r\\n\\r\\n    <button class=\\\"save-btn\\\" float=\\\"left\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!offender.changesMade\\\" (click)=\\\"saveChanges(offender)\\\">Save Changes</button>\\r\\n    <button class=\\\"cancel-btn\\\" float=\\\"right\\\" mat-raised-button color=\\\"warn\\\" [disabled]=\\\"!offender.changesMade\\\" (click)=\\\"discardChanges(offender)\\\">Discard Changes</button>\\r\\n\\r\\n</mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input, Output, EventEmitter, Inject, NgModule } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MatDialogConfig, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Offender } from '../shared/offender.model';\r\nimport { Note } from \"../shared/note.model\";\r\nimport { Admin } from \"../shared/admin.model\";\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\nimport { OffenderService } from \"./offender.service\";\r\nimport { AppModule } from '../app.module';\r\nimport { MatSelectChange } from '@angular/material';\r\nimport { DialogComponent } from '../dialog/dialog.component';\r\nimport { notDeepEqual } from 'assert';\r\n\r\n@Component({\r\n    selector: 'offenders-component',\r\n    templateUrl: './offender.component.html',\r\n    styleUrls: ['./offender.component.css']\r\n})\r\nexport class OffenderComponent implements OnInit, AppModule {\r\n    constructor(\r\n        public dialog: MatDialog,\r\n        private offenderService: OffenderService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.getAll();\r\n    }\r\n\r\n    @Output()\r\n    selectionChange: EventEmitter<MatSelectChange>\r\n    offenders: Offender[];\r\n    offender: Offender;\r\n    newNote: string = '';\r\n    addedName: string = '';\r\n\r\n    getAll() {\r\n        return this.offenderService.getAll().subscribe(response => {\r\n            this.offenders = response;\r\n            this.offenders.forEach(offender => {\r\n                offender.originalPoints = offender.points;\r\n                offender.originalStatus = offender.isBanned;\r\n            })\r\n            console.log(this.offenders)\r\n\r\n            return this.offenders;\r\n        });\r\n    }\r\n\r\n    openDialog(addedName) {\r\n        let dialogRef = this.dialog.open(DialogComponent, {\r\n            data: {\r\n                name: addedName,\r\n                nickName: '',\r\n                note: '',\r\n                points: 0\r\n            }\r\n        });\r\n        this.addedName = '';\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n                // console.log(\"after close result\", result._id);\r\n        });\r\n\r\n        dialogRef.beforeClose().subscribe(dialogData => {\r\n                return this.offenderService.postNew(dialogData).subscribe(response => {\r\n                    response.originalPoints = response.points\r\n                    response.originalStatus = response.isBanned\r\n                    this.offenders.push(response)\r\n                    console.log(\"response\", response);\r\n            })\r\n\r\n        });\r\n    }\r\n\r\n    addNewNote(offender) {\r\n        let noteToAdd = { note: this.newNote, isNew: true, created: new Date(), addedBy: { firstName: \"Fake\", lastName: \"Tester\", nickName: \"Admin\" } }\r\n        offender.notes.push(noteToAdd);\r\n        offender.notesAdded = true;\r\n        offender.changesMade = true;\r\n\r\n        this.newNote = '';\r\n    }\r\n\r\n\r\n    pointsChanged($event: EventEmitter<MatSelectChange>, offender) {\r\n        if (offender.originalPoints == offender.points) {\r\n            offender.pointsChanged = false;\r\n        }\r\n        if (offender.originalPoints != offender.points) {\r\n            offender.changesMade = true;\r\n            offender.pointsChanged = true;\r\n        } else if (offender.originalPoints == offender.points\r\n            && offender.originalStatus == offender.isBanned\r\n            && !offender.notesAdded\r\n        ) {\r\n            offender.changesMade = false;\r\n        }\r\n    }\r\n\r\n    banStatusChanged($event: EventEmitter<any>, offender) {\r\n        if (offender.originalStatus == offender.isBanned) {\r\n            offender.banStatusChanged = false;\r\n        }\r\n        if (offender.originalStatus != offender.isBanned) {\r\n            offender.banStatusChanged = true;\r\n            offender.changesMade = true;\r\n        } else if (\r\n            offender.originalStatus == offender.isBanned\r\n            && offender.originalPoints == offender.points\r\n            && !offender.notesAdded\r\n        ) {\r\n            offender.changesMade = false;\r\n        }\r\n    }\r\n\r\n    saveChanges(offender: Offender) {\r\n        let newNotes: Note[] = [];\r\n        if (offender.notesAdded) {\r\n            newNotes = [];\r\n            offender.notes.forEach(note => {\r\n                if (note.isNew) {\r\n                    note.isNew = false;\r\n                    newNotes.push(note)\r\n                }\r\n            })\r\n        }\r\n\r\n        offender.originalPoints = offender.points;\r\n        offender.originalStatus = offender.isBanned;\r\n        offender.changesMade = false;\r\n        offender.updated = new Date();\r\n\r\n        this.offenderService.updateStatus({\r\n            _id: offender._id,\r\n            notes: newNotes,\r\n            points: offender.points,\r\n            isBanned: offender.isBanned,\r\n            updated: offender.updated\r\n        }).subscribe();\r\n\r\n    }\r\n\r\n    discardChanges(offender) {\r\n        if (offender.notesAdded) {\r\n            offender.notes.forEach(note => {\r\n                if (note.isNew) {\r\n                    let idx = offender.notes.indexOf(note);\r\n                    offender.notes.splice(idx);\r\n                }\r\n                offender.notesAdded = false;\r\n            })\r\n        }\r\n        if (offender.banStatusChanged) {\r\n            offender.isBanned = offender.originalStatus;\r\n        }\r\n        if (offender.pointsChanged) {\r\n            offender.points = offender.originalPoints;\r\n        }\r\n        offender.changesMade = false;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Offender } from \"../shared/offender.model\";\r\nimport { Admin } from '../shared/admin.model';\r\nimport { Note } from '../shared/note.model';\r\n\r\n@Injectable()\r\nexport class OffenderService {\r\n\r\n  offender: Offender;\r\n  offenders: Offender[];\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getAll(): Observable<Offender[]> {\r\n    return this.httpClient.get<Offender[]>('/api/offenders')\r\n  }\r\n\r\n  postNew(body: {offender: Offender}): Observable<Offender> {\r\n    return this.httpClient.post<Offender>('/api/offender', body)\r\n  }\r\n\r\n  updateStatus(body: { _id: number, notes: Note[], points: number, isBanned: boolean, updated: Date }): Observable<Offender> {\r\n    return this.httpClient.put<Offender>('/api/update', body)\r\n  }\r\n}","import { Admin } from \"../shared/admin.model\";\r\n\r\nexport class Note {\r\n    note: string;\r\n    created: Date = new Date();\r\n    addedBy: Admin;\r\n    isNew?: boolean = true; // only used client side\r\n\r\n    constructor(note: string, addedBy: Admin) {\r\n        this.note = note;\r\n        this.addedBy = addedBy;\r\n    };\r\n}\r\n","import { Note } from \"../shared/note.model\";\r\nimport { Admin } from \"./admin.model\";\r\n\r\nexport class Offender {\r\n    _id?: number; // automatically assigned by Mongo\r\n    name: string;\r\n    nickName?: string; // future feature\r\n    otherNames?: { altName: string }[]; // future feature\r\n    points: number;\r\n    originalPoints?: number; // only used client side\r\n    isBanned: boolean;\r\n    originalStatus?: boolean; // only used client side\r\n    addedBy: Admin;\r\n    notes: Note[];\r\n    notesAdded: boolean = false;\r\n    created: Date = new Date();\r\n    updated: Date = new Date();\r\n    changesMade?: boolean; // only used client side\r\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));"],"sourceRoot":""}